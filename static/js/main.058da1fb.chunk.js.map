{"version":3,"sources":["store/reducers/character/thunks.ts","store/reducers/character/index.ts","store/reducers/characters/thunks.ts","store/reducers/characters/index.ts","store/index.ts","store/reducers/locations/index.ts","theme/index.ts","components/NavBar/styles.ts","components/NavBar/index.tsx","pages/Home/Characters/CharacterCard/styles.ts","pages/Home/Characters/CharacterCard/index.tsx","pages/Home/Characters/styles.ts","pages/Home/Characters/index.tsx","pages/Home/Characters/useCharacters/index.ts","pages/Home/Footer/styles.ts","pages/Home/Footer/index.tsx","pages/Home/Hero/styles.ts","pages/Home/Hero/index.tsx","pages/Home/index.tsx","pages/NotFound/index.tsx","App.tsx","index.tsx","theme/global.styles.ts","theme/common.styles.ts","store/reducers/locations/thunks.ts","helpers/string.ts","store/hooks/index.ts","store/reducers/episodes/thunks.ts","store/reducers/episodes/index.ts"],"names":["fetchCharacter","createAsyncThunk","params","thunkAPI","character","location","origin","episodes","isNaN","rejectWithValue","getCharacter","response","status","statusMessage","data","locationsToFetch","url","locationUrls","Object","values","length","char","dispatch","fetchLocation","state","getState","locations","fetchEpisode","episode","map","epi","console","error","initialState","isLoading","characterSlice","createSlice","name","reducers","resetState","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","fetchCharacters","filters","getCharacters","results","forEach","toString","charactersSlice","info","rootReducer","characters","charactersReducer","Array","isArray","episodeReducer","characterReducer","store","configureStore","reducer","theme","createTheme","appBarSx","backgroundColor","boxShadow","NavBar","AppBar","position","sx","Toolbar","width","height","viewBox","fill","d","Status","styled","div","hw","custom","props","color","CharInfo","flexCol","textEllipsis","Card","MUICard","media","tabletPortrait","statusColorMap","Alive","Dead","unknown","CharacterCard","navigate","useNavigate","charInfo","species","type","CardActionArea","className","onClick","id","CardMedia","component","image","alt","CardContent","Tooltip","title","arrow","Typography","gutterBottom","variant","keys","charInfoKey","Section","section","CharacterCards","flexRowCenter","Characters","useAppDispatch","useAppSelector","next","URL","nextPage","searchParams","get","hasNextPage","useEffect","page","useInfiniteScroll","loading","onLoadMore","Number","rootMargin","delayInMs","infiniteSrollRef","useCharacters","CircularProgress","ref","Wrapper","footer","Footer","href","target","rel","full","Hero","Home","Container","main","NotFound","Character","React","lazy","then","mod","default","App","path","element","Suspense","fallback","ReactDOM","createRoot","document","getElementById","render","ThemeProvider","CssBaseline","GlobalStyles","styles","body","padding","margin","fontFamily","scrollBehavior","css","flexColCenter","flexRow","customMediaQuery","orientation","desktop","tabletLandscape","phone","half","h","unit","w","locationUrl","extractNumberFromString","locationIds","getLocation","str","Error","nums","match","num","join","useSelector","useDispatch","episodeUrls","episodeIds","episodeUrl","episodeId","push","getEpisode","episodeSlice"],"mappings":"yPAcaA,EAAiBC,YAC5B,yBAAwB,iDACxB,WAAOC,EAAgBC,GAAQ,mGAM3B,GAN2B,SAErBC,EAAgCF,EAAhCE,UAAWC,EAAqBH,EAArBG,SAAUC,EAAWJ,EAAXI,OACvBC,EAAsB,GAID,kBAAdH,EAAsB,qBAC3BI,MAAMJ,GAAW,CAAD,wCAASD,EAASM,gBAAgB,6BAA2B,uBAE1DC,uBAAaN,GAAU,OAAhC,GAEU,OAFlBO,EAAQ,QAEDC,OAAc,0CAClBT,EAASM,gBAAgB,GAAD,OAAIE,EAASC,OAAM,aAAKD,EAASE,iBAAgB,QAe9B,GAZpDT,EAAYO,EAASG,KAGfC,EAA2C,CAAC,EAE9CX,EAAUC,SAASW,MACrBD,EAAiBX,EAAUC,SAASW,KAAOZ,EAAUC,SAASW,KAE5DZ,EAAUE,OAAOU,MACnBD,EAAiBX,EAAUE,OAAOU,KAAOZ,EAAUE,OAAOU,OAGtDC,EAAeC,OAAOC,OAAOJ,IAClBK,OAAO,CAAD,gBACC,OAAhBC,EAAOjB,EAAS,UAChBD,EAASmB,SAASC,YAAcN,IAAc,QAC9CO,EAAQrB,EAASsB,WACvBpB,EAAWgB,EAAKhB,SAASW,IAAMQ,EAAME,UAAUZ,KAAKO,EAAKhB,SAASW,KAAOX,EACzEC,EAASe,EAAKf,OAAOU,IAAMQ,EAAME,UAAUZ,KAAKO,EAAKf,OAAOU,KAAOV,EAAM,yBAKvEH,EAASmB,SAASK,YAAavB,EAAUwB,UAAS,QAEW,OAD7DJ,EAAQrB,EAASsB,WACvBlB,EAAWH,EAAUwB,QAAQC,KAAI,SAACC,GAAG,OAAKN,EAAMjB,SAASO,KAAKgB,EAAI,IAAC,kBAE5D,CACL1B,YACAC,WACAC,SACAC,aACD,6FAGDwB,QAAQC,MAAM,EAAD,IACb7B,EAASM,gBAAgB,EAAD,IAAO,0DAElC,qDAvDuB,ICDpBwB,EAA+B,CACnC7B,UAAW,CAAC,EACZC,SAAU,CAAC,EACXC,OAAQ,CAAC,EACTC,SAAU,GACV2B,WAAW,EACXF,MAAO,MAGHG,EAAiBC,YAAY,CACjCC,KAAM,aACNJ,eACAK,SAAU,CACRC,WAAY,SAACf,GAEX,OADQS,CAEV,GAEFO,cAAe,SAACC,GACdA,EACGC,QAAQ1C,EAAe2C,SAAS,SAACnB,GAChCA,EAAMU,WAAY,CACpB,IACCQ,QAAQ1C,EAAe4C,WAAW,SAACpB,EAAOqB,GAAY,IAAD,QACpDrB,EAAMpB,WAA0B,QAAd,EAAAyC,EAAOC,eAAO,aAAd,EAAgB1C,YAAa6B,EAAa7B,UAC5DoB,EAAMnB,UAAyB,QAAd,EAAAwC,EAAOC,eAAO,aAAd,EAAgBzC,WAAY4B,EAAa5B,SAC1DmB,EAAMlB,QAAuB,QAAd,EAAAuC,EAAOC,eAAO,aAAd,EAAgBxC,SAAU2B,EAAa3B,OACtDkB,EAAMjB,UAAyB,QAAd,EAAAsC,EAAOC,eAAO,aAAd,EAAgBvC,WAAY0B,EAAa1B,SAC1DiB,EAAMU,WAAY,CACpB,IACCQ,QAAQ1C,EAAe+C,UAAU,SAACvB,EAAOqB,GACxCrB,EAAMU,WAAY,EAClBV,EAAMQ,MAAQa,EAAOC,OACvB,GACJ,IAOaP,GAJAJ,MAAsB,QAIPA,EAAea,QAA9BT,W,2OCjDFU,EAAkBhD,YAC7B,2BAA0B,iDAC1B,WAAOiD,EAA0B/C,GAAQ,kHAEbgD,wBAAcD,GAAQ,wJAA7B,EAAgCpC,KAAI,QAagB,OAb/DH,EAAQ,KACRI,EAA2C,CAAC,EAE1C,OAARJ,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUyC,eAAO,OAAjB,EAAmBC,SAAQ,SAAChC,GACtBA,EAAKhB,SAASW,MAChBD,EAAiBM,EAAKhB,SAASW,KAAOK,EAAKhB,SAASW,KAElDK,EAAKf,OAAOU,MACdD,EAAiBM,EAAKf,OAAOU,KAAOK,EAAKf,OAAOU,IAEpD,KAEMC,EAAeC,OAAOC,OAAOJ,IACtBK,QAAUjB,EAASmB,SAASC,YAAcN,IAAc,kBAE9DN,GAAQ,kCAEf,OACEoB,QAAQC,MAAM,KAAMsB,YACpBnD,EAASM,gBAAgB,KAAM6C,aAChC,0DAEJ,qDAzByB,ICmCbC,EAtBSnB,YAAY,CAClCC,KAAM,aACNJ,aARoC,CACpCuB,KAAM,CAAC,EACP1C,KAAM,GACNoB,WAAW,GAMXI,SAAU,CAAC,EACXE,cAAe,SAACC,GACdA,EACGC,QAAQO,EAAgBN,SAAS,SAACnB,GACjCA,EAAMU,WAAY,CACpB,IACCQ,QAAQO,EAAgBL,WAAW,SAACpB,EAAOqB,GAAY,IAAD,IACrDrB,EAAMU,WAAY,EAClBV,EAAMgC,KAAa,OAANX,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQC,eAAO,WAAT,EAAN,EAAiBU,KACpB,OAANX,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQC,eAAO,OAAf,EAAiBM,UACnB5B,EAAMV,KAAI,sBAAOU,EAAMV,MAAI,YAAK+B,EAAOC,QAAQM,UAEnD,IACCV,QAAQO,EAAgBF,UAAU,SAACvB,GAClCA,EAAMU,WAAY,CACpB,GACJ,IAGoC,Q,QCnCzBuB,EAAc,CACzBC,WAAYC,EACZjC,UCQoBU,YAAY,CAChCC,KAAM,YACNJ,aAPmC,CACnCnB,KAAM,CAAC,EACPoB,WAAW,GAMXI,SAAU,CAAC,EACXE,cAAe,SAACC,GACdA,EACGC,QAAQnB,IAAcoB,SAAS,SAACnB,GAC/BA,EAAMU,WAAY,CACpB,IACCQ,QAAQnB,IAAcqB,WAAW,SAACpB,EAAOqB,GAKhC,IAAD,EAEqB,EANxBe,MAAMC,QAAQhB,EAAOC,SACvBD,EAAOC,QAAQO,SAAQ,SAACvC,GACtBU,EAAMV,KAAKA,EAAKE,KAAOF,CACzB,IAGU,OAAN+B,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQC,eAAO,OAAf,EAAiB9B,MACnBQ,EAAMV,KAAW,OAAN+B,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQC,eAAO,WAAT,EAAN,EAAiB9B,KAAO6B,EAAOC,SAG9CtB,EAAMU,WAAY,CACpB,IACCQ,QAAQnB,IAAcwB,UAAU,SAACvB,GAChCA,EAAMU,WAAY,CACpB,GACJ,IAGkC,QDnClC3B,SAAUuD,IACV1D,UAAW2D,KAGAC,EAAQC,YAAe,CAClCC,QAAST,I,SEbEU,EAAQC,YAAY,CAAC,G,yBCArBC,EAAoB,CAC/BC,gBAAiB,OACjBC,UAAW,Q,OCEAC,EAAmB,WAC9B,OACE,cAACC,EAAA,EAAM,CAACC,SAAS,SAASC,GAAIN,EAAS,SACrC,cAACO,EAAA,EAAO,UACN,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAM,SACzD,sBAAMC,EAAE,43NAKlB,E,uFCXaC,EAASC,IAAOC,IAAG,yGAC5BC,IAAGC,OAAO,GAAI,OAEI,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAI/BC,EAAWN,IAAOC,IAAG,uIAC9BM,IAMEC,KAIOC,EAAOT,YAAOU,IAAPV,CAAe,unBAgBzBQ,IAKNG,IAAMC,gBC5BJC,EAAsD,CAC1DC,MAAO,QACPC,KAAM,MACNC,QAAS,QAGEC,GAAiC,SAAH,GAAyC,IAAnChG,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAM,EAANA,OAC9D+F,EAAWC,cAEXC,EAAmC,CACvCC,QAASpG,EAAUoG,SAAW,UAC9BlG,OAAO,GAAD,QAAW,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ+B,OAAQ,UAAS,YAAU,OAAN/B,QAAM,IAANA,KAAQmG,KAAI,kBAASnG,EAAOmG,MAAS,IAC7EpG,SAAS,GAAD,QAAa,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgC,OAAQ,UAAS,YAAY,OAARhC,QAAQ,IAARA,KAAUoG,KAAI,kBAASpG,EAASoG,MAAS,KAGvF,OACE,cAAC,EAAI,CAAC,cAAY,iBAAgB,SAChC,eAACC,EAAA,EAAc,CACbC,UAAU,mBACVC,QAAS,WACPP,EAAS,cAAD,OAAejG,EAAUyG,IAAM,CACrCrF,MAAO,CACLpB,YACAC,WACAC,WAGN,EAAE,UAEF,cAACwG,EAAA,EAAS,CACRC,UAAU,MACVC,MAAO5G,EAAU4G,MACjBC,IAAG,qBAAgB7G,EAAUiC,MAC7BsE,UAAU,eAEZ,eAACO,EAAA,EAAW,CAACP,UAAU,eAAc,UACnC,sBAAKA,UAAU,iBAAgB,UAC7B,cAACQ,EAAA,EAAO,CAACC,MAAOhH,EAAUQ,OAAQyG,OAAK,WACrC,cAACnC,EAAM,CAACM,MAAOQ,EAAe5F,EAAUQ,YAE1C,cAAC0G,EAAA,EAAU,CAACC,cAAY,EAACC,QAAQ,KAAI,SAClCpH,EAAUiC,UAGdnB,OAAOuG,KAAKlB,GAAU1E,KAAI,SAAC6F,GAC1B,OACE,eAACjC,EAAQ,WACP,cAAC6B,EAAA,EAAU,CAACE,QAAQ,QAAQhC,MAAM,iBAAgB,SAC/CkC,IAEH,cAACJ,EAAA,EAAU,CAACE,QAAQ,QAAQhC,MAAM,eAAc,SAC7Ce,EAASmB,OALCA,EASnB,WAKV,ECxEaC,GAAUxC,IAAOyC,QAAO,sLACjClC,IAQAI,IAAMC,gBAKG8B,GAAiB1C,IAAOC,IAAG,sDACpC0C,K,2BCZSC,GAAuB,WAClC,MCO2B,WAAmB,IAAD,MACvCzG,EAAW0G,eACXtE,EAAauE,cAAe,SAACzG,GAAK,OAAKA,EAAMkC,UAAU,IACvDhC,EAAYuG,cAAe,SAACzG,GAAK,OAAKA,EAAME,SAAS,IACrDQ,EAAYwB,EAAWxB,WAAaR,EAAUQ,UAE9ClB,EAAgB,OAAV0C,QAAU,IAAVA,GAAgB,QAAN,EAAVA,EAAYF,YAAI,OAAhB,EAAkB0E,KAAO,IAAIC,IAAc,OAAVzE,QAAU,IAAVA,GAAgB,QAAN,EAAVA,EAAYF,YAAI,WAAN,EAAV,EAAkB0E,MAAkB,GAC3EE,EAAWpH,EAAS,OAAHA,QAAG,IAAHA,GAAiB,QAAd,EAAHA,EAAKqH,oBAAY,WAAd,EAAH,EAAmBC,IAAI,QAAU,EAClDC,IAAgBH,EAEtBI,qBAAU,WACRlH,EAAS2B,EAAgB,CAAEwF,KAAM,IACnC,GAAG,IAEH,MAA2BC,aAAkB,CAC3CC,QAASzG,EACTqG,cACAK,WAAY,kBAAMtH,EAAS2B,EAAgB,CAAEwF,KAAMI,OAAOT,KAAa,EACvEU,WAAY,mBACZC,UAAW,MALNC,EAML,kBANqB,GAQvB,MAAO,CACLtH,UAAWA,EAAUZ,KACrB4C,WAAYA,EAAW5C,KACvBoB,YACAqG,cACAS,mBAEJ,CDpC8EC,GAApEvF,EAAU,EAAVA,WAAYhC,EAAS,EAATA,UAAWsH,EAAgB,EAAhBA,iBAAkB9G,EAAS,EAATA,UAAWqG,EAAW,EAAXA,YAE5D,OACE,eAACZ,GAAO,WACN,cAACE,GAAc,UACZnE,EAAW7B,KAAI,SAACzB,GAAS,OACxB,cAAC,GAAa,CAEZA,UAAWA,EACXC,SAAUqB,EAAUtB,EAAUC,SAASW,KACvCV,OAAQoB,EAAUtB,EAAUE,OAAOU,MAH9BZ,EAAUyG,GAIf,OAGJ0B,GAAerG,IAAc,cAACgH,EAAA,EAAgB,CAACC,IAAKH,MAG5D,EEvBaI,GAAUjE,IAAOkE,OAAM,qRCEvBC,GAAmB,WAC9B,OACE,eAACF,GAAO,WACN,oBAAGG,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAY,yBACxF,OACD,KACD,IACH,mBAAGF,KAAK,2BAA2BC,OAAO,SAASC,IAAI,aAAY,4BAKzE,ECZa9B,GAAUxC,IAAOyC,QAAO,oaACjCE,IAcEhC,IAAMC,eAONV,IAAGqE,KAGDrE,IAAGqE,MCxBEC,GAAiB,WAC5B,OACE,eAAC,GAAO,WACN,cAACrC,EAAA,EAAU,CAACE,QAAQ,KAAI,qCACxB,8BACE,sBAAK3C,MAAM,MAAMC,OAAO,MAAMC,QAAQ,cAAcC,KAAK,UAAS,UAChE,sBAAMC,EAAE,oyIACR,sBAAMA,EAAE,8xDACR,sBAAMA,EAAE,goBAKlB,ECTa2E,GAAiB,WAC5B,OACE,qCACE,cAAC,EAAM,IACP,iCACE,cAAC,GAAI,IACL,cAAC,GAAU,OAEb,cAAC,GAAM,IACP,cAAC,IAAM,MAGb,EChBMC,GAAY1E,IAAO2E,KAAI,qEAGzBhC,KAGSiC,GAAqB,WAChC,OACE,cAACF,GAAS,UACR,sDAGN,ECXMG,GAAYC,IAAMC,MAAK,kBAC3B,oDAA0BC,MAAK,SAACC,GAAG,MAAM,CAAEC,QAASD,EAAIJ,UAAW,GAAE,IAqBxDM,OAlBf,WACE,OACE,eAAC,IAAM,WACL,cAAC,IAAK,CAACC,KAAK,IAAIC,QAAS,cAAC,GAAI,IAAI,SAChC,cAAC,IAAK,CACJD,KAAK,yBACLC,QACE,cAAC,IAAMC,SAAQ,CAACC,SAAU,6CAAsB,SAC9C,cAACV,GAAS,UAKlB,cAAC,IAAK,CAACO,KAAK,IAAIC,QAAS,cAAC,GAAQ,QAGxC,ECbaG,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAU,UACT,cAAC,IAAQ,CAAC/G,MAAOA,EAAM,SACrB,eAACgH,EAAA,EAAa,CAAC7G,MAAOA,EAAM,UAC1B,cAAC8G,EAAA,EAAW,IACZ,cAACC,EAAA,EAAY,CAACC,OCjBM,WAAH,MAAuC,CAC9DC,KAAM,CACJC,QAAS,EACTC,OAAQ,EACRC,WACE,oIACFC,eAAgB,UAEnB,IDUO,cAAC,GAAG,W,sTEjBC1D,EAAgB2D,YAAG,0HAOnBC,EAAgBD,YAAG,6HAOnBE,EAAUF,YAAG,sEAKb/F,EAAU+F,YAAG,yEAKpBG,EAAmB,SACvB/G,GAAa,IACb4B,EAA8B,uDAAG,MACjC+C,EAAM,uDAAG,cACTqC,EAA4C,uDAAG,KAAI,6BAGxCrC,EAAM,iBAAS/C,EAAI,mBAAW5B,EAAK,eAC5CgH,EAAW,4BAAwBA,EAAW,QAAQ,SAI7C/F,EAAQ,CACnBR,OAAQsG,EACRE,QAASF,EAAiB,MAC1BG,gBAAiBH,EAAiB,MAClC7F,eAAgB6F,EAAiB,KACjCI,MAAOJ,EAAiB,MAoBbjG,GAjBkB8F,YAAG,qUAiBNA,YAAG,sGAMlBpG,EAAK,CAChBqE,KAAM+B,YAAG,mEAITQ,KAAMR,YAAG,iEAITnG,OAAQ,eAAC4G,EAAC,uDAAG,GAAIC,EAAI,uDAAG,IAAKC,EAAC,uDAAG,EAAC,OAAuBX,YAAG,sEAChDS,EAAIC,EACLC,GAAKF,EAAIC,EAAI,E,+GCzEb5K,EAAgBtB,YAC3B,wBAAuB,iDACvB,WAAOgB,EAAwBd,GAAQ,uFAcM,GAdN,SAE7BqB,EAAQrB,EAASsB,WACjBV,EAA2C,CAAC,EAEtC,OAAZE,QAAY,IAAZA,KAAcoC,SAAQ,SAACgJ,GACrB,GAAIA,IAAgB7K,EAAME,UAAUZ,KAAKuL,GAAc,CACrD,IAAMxF,EAAKyF,YAAwBD,GAC/BxF,IAAI9F,EAAiB8F,GAAMA,EACjC,CACF,IAEM0F,EAAcrL,OAAOC,OAAOJ,GAE9BW,EAAmC,CAAC,GAEpC6K,EAAYnL,OAAO,CAAD,gCAAqBoL,sBAAYD,GAAY,OAA3C7K,EAAS,OAAoCZ,KAAI,WAE9C,IAAvByL,EAAYnL,OAAY,0CAASM,GAAS,aAC1C6K,EAAYnL,OAAS,GAAC,0CAASM,GAAS,oFAGX,OAA/BK,QAAQC,MAAM,KAAMsB,YAAW,kBACxBnD,EAASM,gBAAgB,KAAM6C,aAAW,0DAGtD,qDA3BsB,G,kCCTzB,kCAAO,IAAMgJ,EAA0B,WAAuB,IAAtBG,EAAG,uDAAG,GAC5C,IAAKA,GAAsB,kBAARA,EAAkB,MAAM,IAAIC,MAAM,gCACrD,IAAMC,EAAOF,EAAIG,MAAM,OACvB,IAAKD,EAAM,MAAM,IAAID,MAAM,oBAC3B,IAAMG,EAAU,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,KAAK,IACvB,OAAOjE,OAAOgE,EAChB,C,kCCNA,gFAIa5E,EAAkD8E,IAClD/E,EAAoC,WAAH,OAASgF,aAA0B,C,+GCGpErL,EAAe1B,YAC1B,sBAAqB,iDACrB,WAAOgN,EAAuB9M,GAAQ,qFASI,GATJ,SAE5BqB,EAAQrB,EAASsB,WACjByL,EAAuB,GAC7BD,EAAY5J,SAAQ,SAAC8J,GACnB,IAAMC,EAAYd,YAAwBa,GACtCC,IAAc5L,EAAMjB,SAASO,KAAKqM,IAAaD,EAAWG,KAAKD,EACrE,IAEI7M,EAAgC,CAAC,GAEjC2M,EAAW9L,OAAO,CAAD,+BAAoBkM,qBAAWJ,GAAW,OAAxC3M,EAAQ,OAAkCO,KAAI,UAE3C,IAAtBoM,EAAW9L,OAAY,0CAASb,GAAQ,aACxC2M,EAAW9L,OAAS,GAAC,0CAASb,GAAQ,oFAGT,OAA/BwB,QAAQC,MAAM,KAAMsB,YAAW,kBACxBnD,EAASM,gBAAgB,KAAM6C,aAAW,0DAGtD,qDAtBoB,ICQjBiK,EAAenL,YAAY,CAC/BC,KAAM,WACNJ,aAPkC,CAClCnB,KAAM,CAAC,EACPoB,WAAW,GAMXI,SAAU,CAAC,EACXE,cAAe,SAACC,GACdA,EACGC,QAAQf,EAAagB,SAAS,SAACnB,GAC9BA,EAAMU,WAAY,CACpB,IACCQ,QAAQf,EAAaiB,WAAW,SAACpB,EAAOqB,GAK/B,IAAD,EAEqB,EANxBe,MAAMC,QAAQhB,EAAOC,SACvBD,EAAOC,QAAQO,SAAQ,SAACvC,GACtBU,EAAMV,KAAKA,EAAKE,KAAOF,CACzB,IAGU,OAAN+B,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQC,eAAO,OAAf,EAAiB9B,MACnBQ,EAAMV,KAAW,OAAN+B,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQC,eAAO,WAAT,EAAN,EAAiB9B,KAAO6B,EAAOC,SAG9CtB,EAAMU,WAAY,CACpB,IACCQ,QAAQf,EAAaoB,UAAU,SAACvB,GAC/BA,EAAMU,WAAY,CACpB,GACJ,IAGaqL,MAAoB,O","file":"static/js/main.058da1fb.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getCharacter } from 'rickmortyapi'\nimport { Character, Episode, Location } from 'rickmortyapi/dist/interfaces'\n\nimport { RootState } from '../..'\nimport { fetchEpisode } from '../episodes'\nimport { fetchLocation } from '../locations/thunks'\n\ninterface Params {\n  character: number | Character\n  location?: Location\n  origin?: Location\n}\n\nexport const fetchCharacter = createAsyncThunk(\n  'character/getCharacter',\n  async (params: Params, thunkAPI) => {\n    try {\n      let { character, location, origin } = params\n      let episodes: Episode[] = []\n\n      // Character ID is passed\n      // Fetch Character data followed by Location and Origin data\n      if (typeof character === 'number') {\n        if (isNaN(character)) return thunkAPI.rejectWithValue('404: Character not found')\n\n        const response = await getCharacter(character)\n\n        if (response.status !== 200) {\n          return thunkAPI.rejectWithValue(`${response.status}: ${response.statusMessage}`)\n        }\n\n        character = response.data\n\n        /* Fetch Location & Origin */\n        const locationsToFetch: Record<string, string> = {}\n\n        if (character.location.url) {\n          locationsToFetch[character.location.url] = character.location.url\n        }\n        if (character.origin.url) {\n          locationsToFetch[character.origin.url] = character.origin.url\n        }\n\n        const locationUrls = Object.values(locationsToFetch)\n        if (locationUrls.length) {\n          const char = character as Character\n          await thunkAPI.dispatch(fetchLocation(locationUrls))\n          const state = thunkAPI.getState() as RootState\n          location = char.location.url ? state.locations.data[char.location.url] : location\n          origin = char.origin.url ? state.locations.data[char.origin.url] : origin\n        }\n      }\n\n      /* Fetch Episodes */\n      await thunkAPI.dispatch(fetchEpisode(character.episode))\n      const state = thunkAPI.getState() as RootState\n      episodes = character.episode.map((epi) => state.episodes.data[epi])\n\n      return {\n        character,\n        location,\n        origin,\n        episodes,\n      }\n    } catch (error) {\n      if (!error) return\n      console.error(error)\n      thunkAPI.rejectWithValue(error)\n    }\n  },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Character, Episode, Location } from 'rickmortyapi/dist/interfaces'\n\nimport { fetchCharacter } from './thunks'\n\ninterface CharacterState {\n  character: Character\n  location: Location\n  origin: Location\n  episodes: Episode[]\n  isLoading: boolean\n  error: string | null\n}\n\nconst initialState: CharacterState = {\n  character: {} as Character,\n  location: {} as Location,\n  origin: {} as Location,\n  episodes: [],\n  isLoading: true,\n  error: null,\n}\n\nconst characterSlice = createSlice({\n  name: 'characters',\n  initialState,\n  reducers: {\n    resetState: (state) => {\n      state = initialState\n      return state\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCharacter.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(fetchCharacter.fulfilled, (state, action) => {\n        state.character = action.payload?.character || initialState.character\n        state.location = action.payload?.location || initialState.location\n        state.origin = action.payload?.origin || initialState.origin\n        state.episodes = action.payload?.episodes || initialState.episodes\n        state.isLoading = false\n      })\n      .addCase(fetchCharacter.rejected, (state, action) => {\n        state.isLoading = false\n        state.error = action.payload as string\n      })\n  },\n})\n\nexport default characterSlice.reducer\n\nexport { fetchCharacter }\n\nexport const { resetState } = characterSlice.actions\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getCharacters } from 'rickmortyapi'\nimport { CharacterFilter } from 'rickmortyapi/dist/interfaces'\n\nimport { fetchLocation } from '../locations/thunks'\n\nexport const fetchCharacters = createAsyncThunk(\n  'characters/getCharacters',\n  async (filters: CharacterFilter, thunkAPI) => {\n    try {\n      const response = (await getCharacters(filters))?.data\n      const locationsToFetch: Record<string, string> = {}\n\n      response?.results?.forEach((char) => {\n        if (char.location.url) {\n          locationsToFetch[char.location.url] = char.location.url\n        }\n        if (char.origin.url) {\n          locationsToFetch[char.origin.url] = char.origin.url\n        }\n      })\n\n      const locationUrls = Object.values(locationsToFetch)\n      locationUrls.length && thunkAPI.dispatch(fetchLocation(locationUrls))\n\n      return response\n    } catch (error) {\n      if (error) {\n        console.error(error.toString())\n        thunkAPI.rejectWithValue(error.toString())\n      }\n    }\n  },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Character, Info } from 'rickmortyapi/dist/interfaces'\n\nimport { fetchCharacters } from './thunks'\n\ntype Resp = Info<Character[]>\ntype RespMeta = Resp['info']\n\ninterface CharactersState {\n  info: RespMeta\n  data: Character[]\n  isLoading: boolean\n}\n\nconst initialState: CharactersState = {\n  info: {} as RespMeta,\n  data: [],\n  isLoading: true,\n}\n\nconst charactersSlice = createSlice({\n  name: 'characters',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCharacters.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(fetchCharacters.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.info = action?.payload?.info\n        if (action?.payload?.results) {\n          state.data = [...state.data, ...action.payload.results]\n        }\n      })\n      .addCase(fetchCharacters.rejected, (state) => {\n        state.isLoading = false\n      })\n  },\n})\n\nexport default charactersSlice.reducer\n\nexport { fetchCharacters }\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport characterReducer from './reducers/character'\nimport charactersReducer from './reducers/characters'\nimport episodeReducer from './reducers/episodes'\nimport locationReducer from './reducers/locations'\n\nexport const rootReducer = {\n  characters: charactersReducer,\n  locations: locationReducer,\n  episodes: episodeReducer,\n  character: characterReducer,\n}\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Location } from 'rickmortyapi/dist/interfaces'\n\nimport { fetchLocation } from './thunks'\n\ntype Data = Record<string, Location>\n\ninterface LocationsState {\n  data: Data\n  isLoading: boolean\n}\n\nconst initialState: LocationsState = {\n  data: {},\n  isLoading: false,\n}\n\nconst locationSlice = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchLocation.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(fetchLocation.fulfilled, (state, action) => {\n        if (Array.isArray(action.payload)) {\n          action.payload.forEach((data: Location) => {\n            state.data[data.url] = data\n          })\n        } else {\n          // handle single result\n          if (action?.payload?.url) {\n            state.data[action?.payload?.url] = action.payload\n          }\n        }\n        state.isLoading = false\n      })\n      .addCase(fetchLocation.rejected, (state) => {\n        state.isLoading = false\n      })\n  },\n})\n\nexport default locationSlice.reducer\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({})\n\nexport * from './global.styles'\n","import { SxProps } from '@mui/material/'\n\nexport const appBarSx: SxProps = {\n  backgroundColor: '#fff',\n  boxShadow: 'none',\n}\n","import AppBar from '@mui/material/AppBar'\nimport Toolbar from '@mui/material/Toolbar'\nimport React from 'react'\n\nimport { appBarSx } from './styles'\n\nexport const NavBar: React.FC = () => {\n  return (\n    <AppBar position='static' sx={appBarSx}>\n      <Toolbar>\n        <svg width='40' height='40' viewBox='0 0 50 50' fill='#000'>\n          <path d='M22.0852 0.160518C16.4024 0.906765 11.4609 3.26988 7.50769 7.14463C4.09614 10.4836 1.80593 14.5114 0.656075 19.1994C0.161922 21.2181 -0.00913038 22.768 0.000372558 25.0354C0.0098755 29.1493 0.817625 32.5362 2.6707 36.2674C4.52377 39.9795 7.45068 43.2993 11.0238 45.7103C15.7943 48.9249 21.8476 50.4748 27.3118 49.8721C33.5838 49.1736 38.5918 46.8105 42.8111 42.534C48.5129 36.7458 50.9076 29.2642 49.6912 20.9215C48.988 16.0231 46.1846 10.6271 42.545 7.13506C39.105 3.84392 34.9712 1.60518 30.4478 0.591045C27.8535 0.0170091 24.518 -0.164769 22.0852 0.160518ZM28.0816 3.31772C34.9332 4.32228 40.9865 8.75193 44.1225 15.0568C45.0728 16.9702 45.757 19.1324 46.0991 21.2563C46.3367 22.7297 46.3367 26.681 46.0991 28.0491C45.4624 31.6655 44.17 34.7271 42.0034 37.6642C41.6422 38.1617 40.7015 39.2141 39.9222 39.9986L38.5063 41.4146L38.5633 42.1513L38.6203 42.8784L38.3447 41.826C38.0216 40.5727 37.7365 39.8743 37.3184 39.3194C37.1474 39.0897 37.0048 38.8506 37.0048 38.7836C37.0143 38.7262 37.2519 38.4966 37.5465 38.2861C38.0786 37.9034 38.8104 37.1284 39.2095 36.5161C39.352 36.3152 39.5516 36.1526 39.7512 36.0952C40.2263 35.9612 40.768 35.3968 40.8915 34.9088C41.0246 34.44 40.977 34.22 40.6539 33.7321L40.4164 33.3876L40.6254 32.4405C40.8345 31.5029 40.8345 31.4838 40.6729 30.0104C40.5874 29.1972 40.5209 28.4127 40.5209 28.2787C40.5209 27.9439 39.7892 26.4705 39.2095 25.6573C38.2402 24.2796 37.8791 23.9543 36.4726 23.2655C34.8381 22.4523 34.2395 22.3183 32.5859 22.3853C31.1415 22.4427 29.9251 22.7201 28.8133 23.2559C27.6919 23.7917 26.4185 25.0641 25.1927 26.8915C24.7745 27.5038 24.746 27.5803 24.746 28.1735C24.746 28.6327 24.651 29.0824 24.4039 29.8573C23.9858 31.168 24.0048 31.4742 24.6035 32.4979C24.8411 32.8997 25.0311 33.2824 25.0311 33.3302C25.0311 33.3876 24.9076 33.5694 24.746 33.7416C24.2424 34.287 24.2519 35.1289 24.7745 35.6934C25.0691 36.0091 25.7913 36.3057 25.9719 36.1813C26.0194 36.1526 25.9814 35.9134 25.8769 35.6551C25.5918 34.8993 25.6678 34.8706 26.0194 35.6073C26.7131 37.0806 27.6539 38.0278 29.1649 38.774C30.3052 39.3289 31.284 39.5777 32.681 39.6446C33.3082 39.6733 33.7358 39.7307 33.6313 39.769C33.0611 39.9699 30.4383 39.5968 29.2314 39.1376L28.6042 38.8984L28.4427 39.1184C28.0911 39.5777 27.3973 41.0989 27.2263 41.7781C27.1313 42.1704 26.9982 42.9645 26.9317 43.5385C26.7416 45.3276 26.6656 45.4902 26.4661 44.4378C26.1335 42.6966 23.9003 34.4496 23.6247 33.9521C23.5867 33.8756 22.988 33.6747 22.2943 33.5025C21.6006 33.3207 20.8403 33.1102 20.6027 33.0145C20.3747 32.9284 20.1561 32.8806 20.1276 32.9093C20.0991 32.938 20.2606 33.2154 20.4887 33.5216C20.7168 33.8277 21.0399 34.2965 21.2109 34.5549C21.6576 35.2724 22.6934 37.5111 22.9975 38.4009C23.3301 39.3481 23.3016 39.415 22.3038 40.2665C21.9237 40.5918 21.6101 40.9267 21.6101 41.0128C21.6101 41.0893 22.0472 41.5677 22.5794 42.0652C23.5011 42.9358 23.5392 42.9932 23.4631 43.2611L23.3776 43.5481L23.3396 43.2515C23.3206 43.0219 23.0925 42.7636 22.3228 42.0269C21.7716 41.5198 21.325 41.0415 21.325 40.9649C21.325 40.898 21.6671 40.544 22.0757 40.1804C23.121 39.2811 23.1305 39.2237 22.7029 38.1234C21.9807 36.277 20.4317 33.4259 19.8615 32.8901C19.681 32.7179 19.6144 32.5553 19.6144 32.297C19.6144 31.9047 19.7 31.809 20.1846 31.6464C20.6788 31.4838 21.1634 31.1106 21.496 30.6418C21.7621 30.2687 21.8761 30.2017 22.6079 29.9721C23.0545 29.8286 23.4156 29.6755 23.4156 29.6373C23.4156 29.5894 23.2446 29.3407 23.0355 29.0919C22.6269 28.5944 22.5508 28.2405 22.8264 28.1544C22.912 28.1257 23.2446 28.0778 23.5582 28.0395C23.8718 28.0108 24.1568 27.963 24.1949 27.9343C24.2329 27.9152 24.1378 27.5516 23.9858 27.1307C23.8242 26.7097 23.7007 26.3079 23.7007 26.2505C23.7007 26.1835 23.9478 26.0591 24.2519 25.9539C24.9266 25.7338 26.0764 25.1598 26.0764 25.045C26.0764 24.9972 25.7248 24.7675 25.3067 24.5379C24.4799 24.0978 23.6437 23.4281 23.7672 23.3133C23.8052 23.275 24.1473 23.1411 24.5084 23.0263C25.4207 22.7201 26.39 22.2705 27.1503 21.7825C27.5019 21.5625 27.787 21.3616 27.768 21.352C27.7299 21.3233 25.1547 20.2135 24.9076 20.1274C24.7935 20.0796 24.765 20.0222 24.8125 19.9361C24.8506 19.8595 25.4778 19.2472 26.2 18.5775C26.9127 17.8982 27.5019 17.3146 27.5019 17.2764C27.5019 17.1998 26.9127 17.0946 25.1737 16.8458C24.5465 16.7502 23.9953 16.6545 23.9573 16.6162C23.9098 16.578 24.3469 15.736 24.9266 14.7506C25.8674 13.1337 26.0479 12.7893 25.9529 12.7893C25.9339 12.7893 25.1546 13.0668 24.2234 13.4112C22.8644 13.9087 22.4938 14.0044 22.3988 13.9087C22.1897 13.6982 21.9902 12.1196 21.9902 10.7036V9.33553L21.2204 9.74692C20.3177 10.2349 19.1108 11.182 18.5501 11.8422C18.341 12.1005 18.1225 12.311 18.0845 12.311C18.0369 12.311 17.6758 11.8709 17.2672 11.3255C16.564 10.3879 15.3761 9.05808 15.2431 9.05808C15.2051 9.05808 15.129 9.47904 15.072 9.9861C14.901 11.4212 14.3973 13.172 14.1502 13.172C14.0837 13.172 13.6276 12.9807 13.1429 12.751C12.3637 12.3875 11.1758 12.0239 10.7387 12.0239C10.6247 12.0239 10.6817 12.1961 10.9573 12.7606C11.3754 13.6121 11.7555 14.942 11.708 15.4012L11.6795 15.7073L10.8242 15.7743C8.33445 15.9657 7.16559 16.0805 7.16559 16.1283C7.16559 16.1666 7.58372 16.6162 8.09688 17.1424C9.05667 18.1183 9.75989 19.1611 9.71237 19.5247C9.69337 19.6586 9.20872 20.0604 8.21091 20.7589C7.40316 21.3233 6.72845 21.8304 6.70945 21.8782C6.69044 21.9261 6.79497 21.993 6.94702 22.0313C7.96383 22.2513 8.40097 22.3949 8.76208 22.6053C9.25623 22.9019 9.76939 23.342 10.026 23.7056L10.216 23.9735L9.1517 25.0354C8.25842 25.9347 8.10638 26.1165 8.22041 26.2218C8.29644 26.2887 8.86661 26.5088 9.49381 26.7001C10.121 26.8915 10.6722 27.0924 10.7197 27.1402C10.7672 27.1881 10.6912 27.676 10.5106 28.3457C10.3491 28.9676 10.2445 29.5129 10.273 29.5607C10.3206 29.6468 11.8885 29.5703 12.1451 29.4746C12.3827 29.3885 12.4777 29.6181 12.5443 30.374C12.5823 30.8141 12.6393 31.1872 12.6773 31.2063C12.7533 31.2541 13.8176 30.7949 13.8176 30.7184C13.8176 30.6897 13.6941 30.4888 13.5421 30.2687C12.9054 29.3311 12.4682 28.1544 12.1261 26.4227C11.8981 25.3224 11.7935 24.27 11.9076 24.27C11.9456 24.27 12.0121 24.5762 12.0501 24.9493C12.2402 27.0828 13.219 29.7904 14.1122 30.6897C14.3403 30.9193 14.8345 31.2446 15.3096 31.4646L16.1079 31.8377L16.0793 32.1917L16.0508 32.5457L13.9412 33.2537L11.8315 33.9617L11.6415 34.5453C11.5369 34.8706 11.0998 36.3535 10.6817 37.8556C9.90243 40.5822 9.66486 41.2711 9.7789 40.4579C9.82641 40.056 9.8074 40.0178 9.32275 39.482C6.29132 36.1909 4.41924 32.3352 3.68751 27.8578C3.41193 26.2218 3.44044 22.7201 3.73503 21.1128C4.56178 16.5971 6.38635 12.9137 9.37027 9.76606C14.2358 4.64757 21.0494 2.29402 28.0816 3.31772ZM15.2241 34.2391C14.5399 35.6647 13.3235 39.0802 13.428 39.262C13.4755 39.3481 13.8842 39.7403 14.3403 40.1421C14.8059 40.544 15.1956 40.9171 15.2146 40.9841C15.2431 41.051 15.1005 41.2615 14.901 41.4624C14.6919 41.6825 14.6159 41.7303 14.7109 41.5868C15.0815 41.0032 15.11 41.0797 14.1502 40.19C13.504 39.5872 13.2475 39.2907 13.2475 39.128C13.2475 38.6305 15.129 33.8373 15.3286 33.8373C15.3761 33.8373 15.3286 34.0191 15.2241 34.2391Z'></path>\n        </svg>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import styled from '@emotion/styled'\nimport MUICard from '@mui/material/Card'\n\nimport { flexCol, hw, media, textEllipsis } from 'theme/common.styles'\n\nexport const Status = styled.div`\n  ${hw.custom(10, 'px')}\n  border-radius: 50%;\n  background-color: ${(props) => props.color};\n  margin-right: 8px;\n`\n\nexport const CharInfo = styled.div`\n  ${flexCol}\n  margin: 2.5px 0;\n  p:nth-of-type(1) {\n    width: 50px;\n  }\n  p:nth-of-type(2) {\n    ${textEllipsis}\n  }\n`\n\nexport const Card = styled(MUICard)`\n  margin: 20px 0;\n  width: 100%;\n  border-radius: 0;\n  transition: 0.5s ease;\n\n  .card-media {\n    height: 300px;\n  }\n\n  .card-content {\n    .character-name {\n      display: flex;\n      align-items: center;\n      h5 {\n        margin-block: 0;\n        ${textEllipsis}\n      }\n    }\n  }\n\n  ${media.tabletPortrait} {\n    width: 550px;\n    height: 220px;\n    margin: 20px;\n    border-radius: 4px;\n\n    .card-action-area {\n      display: flex;\n      height: 100%;\n    }\n    .card-media {\n      height: 100%;\n      width: 40%;\n    }\n\n    .card-content {\n      height: 100%;\n      width: 60%;\n    }\n  }\n`\n","import { CardActionArea, Tooltip } from '@mui/material'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport Typography from '@mui/material/Typography'\nimport React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Character, Location } from 'rickmortyapi/dist/interfaces'\n\nimport { Card, CharInfo, Status } from './styles'\n\ninterface Props {\n  character: Character\n  location: Location\n  origin: Location\n}\n\nconst statusColorMap: Record<Character['status'], string> = {\n  Alive: 'green',\n  Dead: 'red',\n  unknown: 'gray',\n}\n\nexport const CharacterCard: React.FC<Props> = ({ character, location, origin }) => {\n  const navigate = useNavigate()\n\n  const charInfo: Record<string, string> = {\n    species: character.species || 'unknown',\n    origin: `${origin?.name || 'unknown'} ${origin?.type ? ` • ${origin.type}` : ''}`,\n    location: `${location?.name || 'unknown'} ${location?.type ? ` • ${location.type}` : ''}`,\n  }\n\n  return (\n    <Card data-testid='character-card'>\n      <CardActionArea\n        className='card-action-area'\n        onClick={() => {\n          navigate(`/character/${character.id}`, {\n            state: {\n              character,\n              location,\n              origin,\n            },\n          })\n        }}\n      >\n        <CardMedia\n          component='img'\n          image={character.image}\n          alt={`picture of ${character.name}`}\n          className='card-media'\n        />\n        <CardContent className='card-content'>\n          <div className='character-name'>\n            <Tooltip title={character.status} arrow>\n              <Status color={statusColorMap[character.status]} />\n            </Tooltip>\n            <Typography gutterBottom variant='h5'>\n              {character.name}\n            </Typography>\n          </div>\n          {Object.keys(charInfo).map((charInfoKey) => {\n            return (\n              <CharInfo key={charInfoKey}>\n                <Typography variant='body2' color='text.secondary'>\n                  {charInfoKey}\n                </Typography>\n                <Typography variant='body1' color='text.primary'>\n                  {charInfo[charInfoKey]}\n                </Typography>\n              </CharInfo>\n            )\n          })}\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n","import styled from '@emotion/styled'\n\nimport { flexCol, flexRowCenter, media } from 'theme/common.styles'\n\nexport const Section = styled.section`\n  ${flexCol}\n  align-items: center;\n  padding: 5vh 0;\n\n  min-height: 100vh;\n  background-color: #202329;\n  color: #fff;\n\n  ${media.tabletPortrait} {\n    padding: 5vh;\n  }\n`\n\nexport const CharacterCards = styled.div`\n  ${flexRowCenter}\n  flex-wrap: wrap;\n`\n","import { CircularProgress } from '@mui/material'\nimport React from 'react'\n\nimport { CharacterCard } from './CharacterCard'\nimport { CharacterCards, Section } from './styles'\nimport { useCharacters } from './useCharacters'\n\nexport const Characters: React.FC = () => {\n  const { characters, locations, infiniteSrollRef, isLoading, hasNextPage } = useCharacters()\n\n  return (\n    <Section>\n      <CharacterCards>\n        {characters.map((character) => (\n          <CharacterCard\n            key={character.id}\n            character={character}\n            location={locations[character.location.url]}\n            origin={locations[character.origin.url]}\n          />\n        ))}\n      </CharacterCards>\n      {(hasNextPage || isLoading) && <CircularProgress ref={infiniteSrollRef} />}\n    </Section>\n  )\n}\n","import { useEffect } from 'react'\nimport useInfiniteScroll, { UseInfiniteScrollHookRefCallback } from 'react-infinite-scroll-hook'\nimport { Character, Location } from 'rickmortyapi/dist/interfaces'\n\nimport { useAppDispatch, useAppSelector } from 'store/hooks'\nimport { fetchCharacters } from 'store/reducers/characters'\n\ntype ReturnType = {\n  isLoading: boolean\n  locations: Record<string, Location>\n  characters: Character[]\n  hasNextPage: boolean\n  infiniteSrollRef: UseInfiniteScrollHookRefCallback\n}\n\nexport const useCharacters = (): ReturnType => {\n  const dispatch = useAppDispatch()\n  const characters = useAppSelector((state) => state.characters)\n  const locations = useAppSelector((state) => state.locations)\n  const isLoading = characters.isLoading || locations.isLoading\n\n  const url = characters?.info?.next ? new URL(characters?.info?.next as string) : ''\n  const nextPage = url ? url?.searchParams?.get('page') : 2\n  const hasNextPage = !!nextPage\n\n  useEffect(() => {\n    dispatch(fetchCharacters({ page: 1 }))\n  }, [])\n\n  const [infiniteSrollRef] = useInfiniteScroll({\n    loading: isLoading,\n    hasNextPage,\n    onLoadMore: () => dispatch(fetchCharacters({ page: Number(nextPage) })),\n    rootMargin: '0px 0px 10px 0px',\n    delayInMs: 1000,\n  })\n\n  return {\n    locations: locations.data,\n    characters: characters.data,\n    isLoading,\n    hasNextPage,\n    infiniteSrollRef,\n  }\n}\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.footer`\n  position: fixed;\n  width: max-content;\n  background: #3c3e44;\n  color: #fff;\n  bottom: 0;\n  right: 0;\n  font-size: 12px;\n  padding: 5px;\n  a {\n    color: #9e9e9e;\n    transition: 0.5s ease;\n    :hover {\n      color: #fff;\n    }\n  }\n`\n","import React from 'react'\n\nimport { Wrapper } from './styles'\n\nexport const Footer: React.FC = () => {\n  return (\n    <Wrapper>\n      <a href='https://github.com/sohammondal/rick-and-morty-wiki' target='_blank' rel='noreferrer'>\n        ❮❯{' '}\n      </a>\n      by{' '}\n      <a href='https://sohammondal.com/' target='_blank' rel='noreferrer'>\n        Soham Mondal\n      </a>\n    </Wrapper>\n  )\n}\n","import styled from '@emotion/styled'\n\nimport { flexRowCenter, hw, media } from 'theme/common.styles'\n\nexport const Section = styled.section`\n  ${flexRowCenter}\n  text-align: center;\n  position: relative;\n  width: 100%;\n  height: calc(50vh - 60px);\n\n  h1 {\n    flex-grow: 1;\n    margin: 0px;\n    color: rgb(32, 35, 41);\n    border: none;\n    font-weight: 900;\n    font-size: 3.625rem;\n\n    ${media.tabletPortrait} {\n      font-size: 5.625rem;\n    }\n  }\n\n  div {\n    position: absolute;\n    ${hw.full}\n    z-index: -1;\n    svg {\n      ${hw.full}\n    }\n  }\n`\n","import Typography from '@mui/material/Typography'\nimport React from 'react'\n\nimport { Section } from './styles'\n\nexport const Hero: React.FC = () => {\n  return (\n    <Section>\n      <Typography variant='h1'>The Rick and Morty Wiki</Typography>\n      <div>\n        <svg width='378' height='376' viewBox='0 0 378 376' fill='#f5f5f5'>\n          <path d='M92.2871 10.1699C90.3999 25.8964 84.8432 45.0828 82.1173 45.0828C81.3834 45.0828 76.3509 42.986 71.0038 40.4697C62.4067 36.4856 49.3012 32.5016 44.4784 32.5016C43.2202 32.5016 43.8493 34.3888 46.8898 40.5746C51.5029 49.9057 55.6966 64.4789 55.1724 69.5114L54.8579 72.8664L45.422 73.6004C17.9529 75.6972 5.05709 76.9554 5.05709 77.4796C5.05709 77.899 9.67022 82.8266 15.3318 88.593C25.921 99.2871 33.6795 110.715 33.1552 114.699C32.9455 116.167 27.5985 120.57 16.5899 128.224C7.67819 134.41 0.234278 139.966 0.0245907 140.491C-0.185097 141.015 0.968185 141.749 2.64569 142.168C13.864 144.58 18.6868 146.152 22.6709 148.459C28.1227 151.709 33.7843 156.532 36.6151 160.516L38.712 163.451L26.9694 175.089C17.1141 184.944 15.4366 186.937 16.6948 188.09C17.5335 188.824 23.8241 191.235 30.7438 193.332C37.6635 195.429 43.7445 197.631 44.2687 198.155C44.7929 198.679 43.9541 204.026 41.9621 211.365C40.1798 218.18 39.0265 224.156 39.341 224.68C39.8652 225.624 57.1645 224.785 59.9952 223.737C62.6163 222.793 63.6648 225.309 64.3987 233.592C64.8181 238.415 65.4471 242.504 65.8665 242.713C66.7052 243.238 78.4478 238.205 78.4478 237.366C78.4478 237.052 77.0848 234.85 75.4073 232.439C70.5845 225.414 67.3343 218.18 64.2938 208.115C62.826 202.873 60.6243 195.848 59.5759 192.388C58.4226 188.929 57.2693 184.211 57.0596 181.904C55.5918 170.791 55.3821 166.702 56.4306 166.702C56.9548 166.702 57.479 168.484 57.479 170.581C57.5838 175.299 59.8904 187.88 61.4631 192.388C62.0921 194.066 64.0842 200.252 65.8665 206.018C70.1651 219.543 76.3509 231.705 81.6979 237.052C84.2142 239.568 89.666 243.133 94.9082 245.544L103.715 249.633L103.401 253.512L103.086 257.392L79.7059 265.15L56.3257 273.013L53.2852 282.973C51.6077 288.53 46.8898 304.991 42.696 319.669C38.5023 334.242 34.5182 346.823 33.8891 347.452C33.2601 348.081 31.3729 353.743 29.8002 360.138C28.2276 366.429 26.7598 372.51 26.4452 373.454C25.921 375.236 30.1148 375.341 104.554 375.341C179.098 375.341 183.292 375.236 183.292 373.454C183.292 372.51 178.364 367.058 172.283 361.397C166.202 355.735 161.274 350.493 161.274 349.654C161.274 348.92 165.049 345.041 169.557 341.057C181.09 331.202 181.195 330.573 176.477 318.515C168.509 298.281 151.419 267.037 145.128 261.166C143.136 259.279 142.402 257.496 142.402 254.666C142.402 250.367 143.346 249.319 148.693 247.536C154.145 245.754 159.492 241.665 163.162 236.528C166.097 232.439 167.355 231.705 175.428 229.189C180.356 227.616 184.34 225.938 184.34 225.519C184.34 224.995 182.453 222.269 180.146 219.543C175.638 214.091 174.799 210.212 177.84 209.268C178.783 208.954 182.453 208.429 185.913 208.01C189.372 207.696 192.518 207.171 192.937 206.857C193.881 206.437 188.534 191.55 187.276 191.025C186.856 190.816 186.437 189.872 186.437 188.824C186.437 187.566 187.905 186.622 191.679 185.678C198.179 184.001 213.696 176.557 213.696 175.194C213.696 174.565 211.704 173.097 209.293 171.839C195.873 165.024 184.969 157.161 187.171 155.903C187.59 155.693 191.469 154.435 195.663 153.177C199.857 151.919 206.672 149.298 210.865 147.41C218.1 144.16 232.988 135.353 232.358 134.724C231.939 134.41 203.526 122.248 200.8 121.304C199.542 120.78 199.228 120.151 199.752 119.207C200.171 118.369 207.091 111.659 215.059 104.32C222.923 96.8757 229.423 90.4802 229.423 90.0608C229.423 89.2221 222.922 88.0688 203.736 85.3429C196.816 84.2944 190.735 83.246 190.316 82.8266C189.792 82.4072 194.615 73.181 201.01 62.3821C211.39 44.6635 213.382 40.8891 212.333 40.8891C212.124 40.8891 203.526 43.9296 193.252 47.7039C178.259 53.1558 174.17 54.2043 173.122 53.1558C170.815 50.8493 168.613 33.55 168.613 18.0331V3.04048L160.121 7.54876C150.161 12.8958 136.846 23.2753 130.66 30.5096C128.353 33.3403 125.942 35.6469 125.523 35.6469C124.998 35.6469 121.014 30.8241 116.506 24.848C108.748 14.5733 95.6421 6.4671e-06 94.1743 6.4671e-06C93.7549 6.4671e-06 92.9162 4.61313 92.2871 10.1699ZM95.2228 272.908C91.3435 275.949 71.5281 328.266 73.1007 330.992C73.6249 331.935 78.1332 336.234 83.1657 340.638C88.3031 345.041 92.6017 349.13 92.8114 349.759C93.021 350.388 91.7629 352.695 89.9806 354.896C88.3031 357.098 86.8353 358.251 86.8353 357.517C86.8353 356.888 87.7788 355.001 89.037 353.533L91.2387 350.703L81.1737 341.267C74.1492 334.661 71.1087 331.097 71.1087 329.419C71.1087 326.064 83.0609 293.982 90.3999 277.522C92.1823 273.537 93.6501 271.545 94.9082 271.545C96.5857 271.65 96.5857 271.755 95.2228 272.908Z'></path>\n          <path d='M270.733 147.306C241.272 152.653 225.021 164.29 203.948 195.429C199.335 202.139 199.02 202.978 199.02 209.478C199.02 214.51 197.972 219.438 195.246 227.93C190.633 242.294 190.842 245.649 197.447 256.867C200.068 261.271 202.165 265.465 202.165 265.989C202.165 266.618 200.802 268.61 199.02 270.497C193.463 276.473 193.568 285.699 199.335 291.885C202.69 295.345 210.553 298.595 212.65 297.232C213.174 296.918 212.44 294.506 211.077 291.78C209.609 289.159 208.456 286.224 208.561 285.28C208.561 284.232 209.085 284.546 209.714 286.224C211.496 290.103 219.779 302.894 223.868 307.926C231.941 317.991 249.345 328.161 265.596 332.46C270.524 333.718 279.226 334.871 286.565 335.186C293.484 335.5 298.202 336.129 297.049 336.549C290.758 338.75 261.821 334.661 248.506 329.629L241.587 327.008L239.804 329.419C233.199 338.121 225.65 357.937 223.763 371.357L223.239 375.341H288.242C349.681 375.341 353.245 375.236 352.721 373.454C352.407 372.51 350.729 366.219 349.052 359.509C345.382 345.041 342.446 337.807 337.728 331.621C335.841 329.105 334.269 326.484 334.269 325.75C334.373 325.121 336.994 322.604 340.245 320.298C346.116 316.104 354.189 307.612 358.592 300.902C360.06 298.7 362.367 296.918 364.464 296.289C366.246 295.764 369.601 293.563 371.907 291.466C379.142 284.546 379.876 275.11 373.48 269.553C371.278 267.666 370.964 266.723 371.593 263.368C372.012 261.271 372.641 259.279 373.061 258.964C373.48 258.65 374.424 255.609 375.158 252.149C376.206 247.117 376.206 243.238 375.158 232.439C374.424 225.1 373.375 219.124 372.851 219.124C372.327 219.124 372.012 216.188 372.117 212.518C372.327 206.752 371.803 204.97 368.028 197.631C362.996 187.67 355.552 176.767 348.003 168.589C343.39 163.556 340.349 161.564 328.502 155.693C320.115 151.604 311.517 148.144 307.324 147.306C298.622 145.418 280.798 145.418 270.733 147.306Z'></path>\n          <path d='M147.646 261.69C147.646 262.005 149.638 264.94 152.154 268.19C154.67 271.441 158.13 276.578 160.017 279.409C164.945 287.272 176.373 311.805 179.728 321.556C183.397 331.935 183.083 332.669 172.074 342C167.88 345.565 164.421 349.34 164.421 350.178C164.421 351.122 169.138 356.154 174.905 361.606C181.196 367.373 185.389 372.091 185.389 373.349C185.389 375.236 186.228 375.341 200.067 375.341C211.076 375.341 214.746 375.026 214.746 373.978C214.746 369.574 189.059 277.207 186.647 272.804C186.228 271.965 179.518 269.763 171.76 267.771C164.001 265.884 155.928 263.577 153.726 262.634C149.428 260.956 147.646 260.642 147.646 261.69Z'></path>\n        </svg>\n      </div>\n    </Section>\n  )\n}\n","import React from 'react'\nimport { Outlet } from 'react-router-dom'\n\nimport { NavBar } from 'components/NavBar'\n\nimport { Characters } from './Characters'\nimport { Footer } from './Footer'\nimport { Hero } from './Hero'\n\nexport const Home: React.FC = () => {\n  return (\n    <>\n      <NavBar />\n      <main>\n        <Hero />\n        <Characters />\n      </main>\n      <Footer />\n      <Outlet />\n    </>\n  )\n}\n","import styled from '@emotion/styled'\nimport React from 'react'\n\nimport { flexRowCenter } from 'theme/common.styles'\n\nconst Container = styled.main`\n  width: 100vw;\n  height: 100vh;\n  ${flexRowCenter}\n`\n\nexport const NotFound: React.FC = () => {\n  return (\n    <Container>\n      <h1>404: Page Not Found</h1>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\n\nimport { Home } from 'pages/Home'\nimport { NotFound } from 'pages/NotFound'\n\nconst Character = React.lazy(() =>\n  import('pages/Character').then((mod) => ({ default: mod.Character })),\n)\n\nfunction App(): React.ReactElement {\n  return (\n    <Routes>\n      <Route path='/' element={<Home />}>\n        <Route\n          path='character/:characterId'\n          element={\n            <React.Suspense fallback={<div>Loading...</div>}>\n              <Character />\n            </React.Suspense>\n          }\n        />\n      </Route>\n      <Route path='*' element={<NotFound />} />\n    </Routes>\n  )\n}\n\nexport default App\n","import { ThemeProvider } from '@mui/material'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport GlobalStyles from '@mui/material/GlobalStyles'\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\n\nimport { store } from 'store'\nimport { gloablStyles, theme } from 'theme'\n\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(\n  <HashRouter>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <GlobalStyles styles={gloablStyles} />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </HashRouter>,\n)\n","import { GlobalStylesProps } from '@mui/material'\n\nexport const gloablStyles = (): GlobalStylesProps['styles'] => ({\n  body: {\n    padding: 0,\n    margin: 0,\n    fontFamily:\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n    scrollBehavior: 'smooth',\n  },\n})\n","import { css } from '@emotion/react'\nimport { SerializedStyles } from '@mui/styled-engine'\n\nexport const flexRowCenter = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const flexColCenter = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const flexRow = css`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const flexCol = css`\n  display: flex;\n  flex-direction: column;\n`\n\nconst customMediaQuery = (\n  width: number,\n  type: 'min' | 'max' | 'device' = 'min',\n  target = 'only screen',\n  orientation: 'portrait' | 'landscape' | null = null,\n): string =>\n  `\n    @media ${target} and (${type}-width: ${width}px) ${\n    orientation ? `and (orientation: ${orientation})` : ``\n  }\n  `\n\nexport const media = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(1366),\n  tabletLandscape: customMediaQuery(1024),\n  tabletPortrait: customMediaQuery(768),\n  phone: customMediaQuery(576),\n}\n\nexport const scrollbarStyles = css`\n  scrollbar-width: 0.25em;\n  scrollbar-track-color: #6a6767;\n  scrollbar-face-color: #ffffff;\n\n  &::-webkit-scrollbar {\n    width: 0.25em;\n    background: #6a6767;\n    border-radius: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #ffffff;\n    border-radius: 8px;\n  }\n`\n\nexport const textEllipsis = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const hw = {\n  full: css`\n    height: 100%;\n    width: 100%;\n  `,\n  half: css`\n    height: 50%;\n    width: 50%;\n  `,\n  custom: (h = 20, unit = '%', w = 0): SerializedStyles => css`\n    height: ${h}${unit};\n    width: ${w || h}${unit};\n  `,\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getLocation } from 'rickmortyapi'\nimport { Location } from 'rickmortyapi/dist/interfaces'\n\nimport { extractNumberFromString } from 'helpers/string'\n\nimport { RootState } from '../..'\n\nexport const fetchLocation = createAsyncThunk(\n  'locations/getLocation',\n  async (locationUrls: string[], thunkAPI) => {\n    try {\n      const state = thunkAPI.getState() as RootState\n      const locationsToFetch: Record<number, number> = {}\n\n      locationUrls?.forEach((locationUrl) => {\n        if (locationUrl && !state.locations.data[locationUrl]) {\n          const id = extractNumberFromString(locationUrl)\n          if (id) locationsToFetch[id] = id\n        }\n      })\n\n      const locationIds = Object.values(locationsToFetch)\n\n      let locations: Location | Location[] = {} as Location\n\n      if (locationIds.length) locations = (await getLocation(locationIds)).data\n\n      if (locationIds.length === 1) return locations as Location\n      if (locationIds.length > 1) return locations as Location[]\n    } catch (error: unknown) {\n      if (error) {\n        console.error(error.toString())\n        return thunkAPI.rejectWithValue(error.toString())\n      }\n    }\n  },\n)\n","export const extractNumberFromString = (str = ''): number => {\n  if (!str || typeof str !== 'string') throw new Error('`str` must be of type string')\n  const nums = str.match(/\\d/g)\n  if (!nums) throw new Error('no numbers found')\n  const num = nums?.join('')\n  return Number(num)\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nimport type { AppDispatch, RootState } from '..'\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\nexport const useAppDispatch: () => AppDispatch = () => useDispatch<AppDispatch>()\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getEpisode } from 'rickmortyapi'\nimport { Episode } from 'rickmortyapi/dist/interfaces'\n\nimport { extractNumberFromString } from 'helpers/string'\n\nimport { RootState } from '../..'\n\nexport const fetchEpisode = createAsyncThunk(\n  'episodes/getEpisode',\n  async (episodeUrls: string[], thunkAPI) => {\n    try {\n      const state = thunkAPI.getState() as RootState\n      const episodeIds: number[] = []\n      episodeUrls.forEach((episodeUrl) => {\n        const episodeId = extractNumberFromString(episodeUrl)\n        if (episodeId && !state.episodes.data[episodeUrl]) episodeIds.push(episodeId)\n      })\n\n      let episodes: Episode | Episode[] = {} as Episode\n\n      if (episodeIds.length) episodes = (await getEpisode(episodeIds)).data\n\n      if (episodeIds.length === 1) return episodes as Episode\n      if (episodeIds.length > 1) return episodes as Episode[]\n    } catch (error: unknown) {\n      if (error) {\n        console.error(error.toString())\n        return thunkAPI.rejectWithValue(error.toString())\n      }\n    }\n  },\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Episode } from 'rickmortyapi/dist/interfaces'\n\nimport { fetchEpisode } from './thunks'\n\ntype Data = Record<string, Episode>\n\ninterface EpisodesState {\n  data: Data\n  isLoading: boolean\n}\n\nconst initialState: EpisodesState = {\n  data: {},\n  isLoading: false,\n}\n\nconst episodeSlice = createSlice({\n  name: 'episodes',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchEpisode.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(fetchEpisode.fulfilled, (state, action) => {\n        if (Array.isArray(action.payload)) {\n          action.payload.forEach((data) => {\n            state.data[data.url] = data\n          })\n        } else {\n          // handle single result\n          if (action?.payload?.url) {\n            state.data[action?.payload?.url] = action.payload\n          }\n        }\n        state.isLoading = false\n      })\n      .addCase(fetchEpisode.rejected, (state) => {\n        state.isLoading = false\n      })\n  },\n})\n\nexport default episodeSlice.reducer\n\nexport { fetchEpisode }\n"],"sourceRoot":""}